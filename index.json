[{"authors":null,"categories":null,"content":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.main]] menu links to it in the config.toml.\n","date":1536465600,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536465600,"objectID":"c3224f3a64174f08aaf31e1f1d16ffd3","permalink":"https://sandeepGunda.github.io/tutorial/","publishdate":"2018-09-09T00:00:00-04:00","relpermalink":"/tutorial/","section":"tutorial","summary":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":" Developed an object detection deep learning model to identify and count the number of tree logs in every truck image from the Georgia Pacific warehouse. Made an object segmentation tool to identify, segment and manually label the tree logs from the images to develop a labelled dataset using OpenCV and KL Divergence in python. Defined a deep learning model using U-Net architecture to predict the number of tree logs in over 11000 images with 78% accuracy.  ","date":1543554000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543554000,"objectID":"1f5d77e0d801102a8be04e8cc8dc30d4","permalink":"https://sandeepGunda.github.io/project/tree-log/","publishdate":"2018-11-30T00:00:00-05:00","relpermalink":"/project/tree-log/","section":"project","summary":"Detect and count the number of tree logs in the images of trucks.","tags":["Image Analytics","Deep Learning","OpenCV","KL Divergence","TensorFlow","Keras","Python","Pandas","Matplotlib","U-Net"],"title":"Tree Log Detection","type":"project"},{"authors":null,"categories":null,"content":" To prove that public opinion of businesses can be easily manipulated by fake reviews, we generated a topic model which generates restaurant reviews based on real restaurant reviews. We aggregated, cleaned and developed a corpus of restaurant reviews from Yelp. Designed Marcov, LSTM and RNN deep learning models to train on the texts and predict the upcoming texts or characters. Obtained the most realistic reviews using the LSTM model.  ","date":1543467600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543467600,"objectID":"45c0dc068162a1bba15fc11e241d7657","permalink":"https://sandeepGunda.github.io/project/fake-review/","publishdate":"2018-11-29T00:00:00-05:00","relpermalink":"/project/fake-review/","section":"project","summary":"Created a model to generate realistic restaurant reviews","tags":["Deep Learning","Un-Supervised Learning","TensorFlow","Keras","Marcov Model","Text Analytics","GloVe Embedding","LSTM","Convolutional Neural Networks","Recurrent Neural Networks","Python","Pandas","Matplotlib"],"title":"Fake Review Generation","type":"project"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;\n","date":1536465600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536465600,"objectID":"6a451186c775f5f0adb3a0416d0cb711","permalink":"https://sandeepGunda.github.io/tutorial/example/","publishdate":"2018-09-09T00:00:00-04:00","relpermalink":"/tutorial/example/","section":"tutorial","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;","tags":null,"title":"Example Page","type":"docs"},{"authors":null,"categories":null,"content":" Worked with the largest regional bank in the South-East USA which spends a considerable amount of time and resources investigating 30k+ suspicious money laundering alerts per month to develop a model which predicts the seriousness of the alerts. Led a team of 4 and tackled issues such as peer â€“ profiling, unavailable data and false positives by feature generation and selection. Tested the data with Logistic Regression, Random Forest, SVC and ADA Boost models to predict the quality of alert (High or Low) using precision and recall parameters. Delivered the ADA Boost model with a precision of 38.50% and recall of 78.48% for its high recall prediction.  ","date":1524715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1524715200,"objectID":"fdf1171303ca344063ccbf69375b20af","permalink":"https://sandeepGunda.github.io/project/aml/","publishdate":"2018-04-26T00:00:00-04:00","relpermalink":"/project/aml/","section":"project","summary":"Separate suspicious money laundering alerts to true positives and false positives","tags":["Python","Scikit-Learn","Machine Learning","Logistic Regression","SVM","Random Forest","ADA Boost","Numpy","Pandas","Matplotlib","Decision Trees","SQL"],"title":"Anti Money Laundering","type":"project"},{"authors":null,"categories":null,"content":" Designed a Machine Learning model to predict the taxi trip duration based on the pickup and drop-off coordinates. Used K Means clustering to determine the various routes across the city and predicted the trip durations using Ridge regression, Lasso Regression, Random Forests and Neural Network and improved the predictions using grid search techniques. Random Forest Regressor provided a prediction with adjusted R square of 88%, which can have a significant impact for cab companies to determine their pricing.  ","date":1524715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1524715200,"objectID":"d94cb96e4c2535ae4849fbc12542a603","permalink":"https://sandeepGunda.github.io/project/trip-duration/","publishdate":"2018-04-26T00:00:00-04:00","relpermalink":"/project/trip-duration/","section":"project","summary":"Predict the taxi trip duration between any two points in the city of New York","tags":["Machine Learning","Scikit-Learn","Keras","K-Means Clustering","Ridge Regression","Lasso Regression","Random Forests","Convolutional Neural Networks","Deep Learning","Python","Pandas","Matplotlib"],"title":"Taxi Cab Trip Duration","type":"project"},{"authors":null,"categories":null,"content":"A study on the public opinion about the topic \u0026ldquo;Bitcoin\u0026rdquo; by performing a sentiment analysis of 6000 tweets in Twitter having the hashtag \u0026ldquo;#Bitcoin\u0026rdquo; from Dec 1, 2017 to Dec 21, 2017.\nWork Done:\n Extracted tweets using the \u0026ldquo;twitteR\u0026rdquo; library in R. Cleaned the text by removing graphical characters (e.g. emoji), removing punctuation, transforming the text to lowercase, removed common words (e.g. grammatical words, words common to the topic) and finally removed URLs from the text using regex. Made a corpus of documents out of them using the \u0026lsquo;tm\u0026rsquo; library in R. Visualized the most popular terms using wordcloud and barplot. Performed sentiment analysis through lexical method by using the list of AFINN positive and negative words to determine a sentiment score of each tweet.  Conclusion:\n So in the end, apart from the majority neutral tweets (54.1%) meaning that people are still wary about the fluctuations in bitcoin prices, the number of positive tweets (27.5%) outweighed the negative ones (18.3%) majority are hoping about the growth in the prices due to investor optimism  ","date":1514523600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514523600,"objectID":"71b26696d03e01c335ea75e63ac1115c","permalink":"https://sandeepGunda.github.io/project/twitter-sentiment-analysis/","publishdate":"2017-12-29T00:00:00-05:00","relpermalink":"/project/twitter-sentiment-analysis/","section":"project","summary":"A study on the public opinion about the topic 'Bitcoin' during it's rise in December 2017","tags":["R","ggplot2","Text Mining","Data Visualization","Sentiment Analysis","Lexical Analysis","Twitter API","Data Cleaning","Term Document Matrix"],"title":"Twitter Sentiment Analysis","type":"project"},{"authors":null,"categories":null,"content":"Work Performed:\n Extracted information and reviews for 200 hotels on Expedia by web-scraping in Python. Designed a SQL database for hotel information using normalized Entity Relationship model. Calculated the sentiment for customer reviews using Semantria for Excel and designed a Mongo DB database for the sentiments. Compared the sentiments with the hotel ratimngs for various categories.  Conclusion:\n Even though most of the hotels have a similar User Rating and Expedia Rating, the sentiments of the reviews often differ. Its easier to express the customer experience through reviews, than through ratings, so hotels should focus more on analyzing and responding to reviews for better insights.  ","date":1512450000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1512450000,"objectID":"6b8fd072a6918bb4457da502637261dc","permalink":"https://sandeepGunda.github.io/project/comparison-ratings-reviews/","publishdate":"2017-12-05T00:00:00-05:00","relpermalink":"/project/comparison-ratings-reviews/","section":"project","summary":"Performed a study to establish a relationship between customer sentiments in online reviews and customer ratings for hotels.","tags":["Python","MongoDB","MySQL","Web Scraping","Beautiful Soup","Sentiment Analysis","Semantria for Excel","Robo 3T"],"title":"Comparison between Customer Reviews and Business Ratings","type":"project"},{"authors":null,"categories":null,"content":" Obtained the dataset and converted date, month and year columns into date-time object, then into single date column. Encoded Airport and Airline names into numerical labels for easier analysis. Scraped weather data from www.wunderground.com (Weather Underground) and integrated into the flight delay dataset. Split Departure Delay column into 4 bins based on the amount of delay and predicted it using Random Forest, Logistic Regression, Decision Tree and NaÃ¯ve Bayes from Scikit-learn library.  ","date":1512363600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1512363600,"objectID":"bf96e408db3072e44d6fd2218cc302e6","permalink":"https://sandeepGunda.github.io/project/flight-delay/","publishdate":"2017-12-04T00:00:00-05:00","relpermalink":"/project/flight-delay/","section":"project","summary":"Flight delay prediction based on weather and historical data.","tags":["Python","Matplotlib","Decision Tree","Logistic Regression","Random Forest","Naive Bayes","Web Scraping","Beautiful Soup"],"title":"Flight Departure Delay Prediction","type":"project"},{"authors":null,"categories":null,"content":" Introduction: In Indian Premier League, 11 teams are competing in a round-robin tournament. Before the tournament, there is an auction to buy players based on the fixed budget for each team, with some limitation on the number of foreign players per team, number of uncapped players per team, etc. In IPL, the franchise managers have a task of building a good team within the budget cap. The players are usually selected based on different heuristics, past experiences, or at most some crude methodologies. Using the player statistics, want to build the best team possible for the lowest cost possible, using our optimization model.\nApproach: Each player has multiple parameters based on their role in the game, which determine the quality of the player. Batsmen have parameters like batting average, strike rate, runs scored, matches played, number of 4s and 6s, etc. Bowlers have parameters like matches played; overs bowled, maidens (overs bowled without giving and runs) bowled, wickets are taken, economy, bowling average, etc. Wicketkeepers are usually considered based on the number of catches taken.\nKey performance indicators:  Batting Performance: It is the sum of the batting averages of the batsmen in the team. Bowling Performance: It is the sum of the bowling averages of the bowlers in the team. Objective Function: Maximize the difference between batting performance a bowling performance.  Analysis based on data from 119 IPL players\nComparison: We tried to compare our team to last year winner to check how good is our optimization:\nLast year winner: 2017 Mumbai Indians We compared our team with Mumbai Indian Tea, with the same budget\n    Performance Metrics Parameters MI Our Team     High/low Budget 2830 2830   High SR 2249 2831   High Batting average 325 460   Low BowlerEco 781 707   Low BowAverage 150 107    As we can see our new optimized team better regarding numbers. We have high batting score and low bowling score Compared to Mumbai Indian. As we know, Batting parameter should be high, and bowling parameter should be low\n","date":1493179200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1493179200,"objectID":"15786aa5db0a2512fe8f2d92e1945a93","permalink":"https://sandeepGunda.github.io/project/sports-team-optimization/","publishdate":"2017-04-26T00:00:00-04:00","relpermalink":"/project/sports-team-optimization/","section":"project","summary":"Built an optimization model to select players for a cheap and best premiere league team","tags":["Operations Research","Microsoft Excel","Excel Solver","Microsoft Word","R","Web Scraping"],"title":"Sports Team Optimization","type":"project"},{"authors":[],"categories":null,"content":"Click on the Slides button above to view the built-in slides feature.\n\rSlides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using url_slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1483246800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483246800,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"https://sandeepGunda.github.io/talk/example/","publishdate":"2017-01-01T00:00:00-05:00","relpermalink":"/talk/example/","section":"talk","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam.","tags":[],"title":"Example Talk","type":"talk"},{"authors":[],"categories":null,"content":" Academic makes it easy to create a beautiful website for free using Markdown. Customize anything on your site with widgets, themes, and language packs.\nFollow our easy step by step guide to learn how to build your own free website with Academic. Check out the personal demo or the business demo of what you\u0026rsquo;ll get in less than 10 minutes.\n View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of Academic:  Donate a coffee Become a backer on Patreon Decorate your laptop or journal with an Academic sticker Wear the T-shirt   \nKey features:\n Easily manage various content including homepage, blog posts, publications, talks, and projects Extensible via color themes and widgets/plugins Write in Markdown for easy formatting and code highlighting, with LaTeX for mathematical expressions Social/academic network linking, Google Analytics, and Disqus comments Responsive and mobile friendly Simple and refreshing one page design Multilingual and easy to customize  Color Themes Academic is available in different color themes and font themes.\n\r\r\r\r\r\r\r\r Ecosystem  Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Quick install using your web browser  Install Academic with Netlify  Netlify will provide you with a customizable URL to access your new site  On GitHub, go to your newly created academic-kickstart repository and edit config.toml to personalize your site. Shortly after saving the file, your site will automatically update Read the Quick Start Guide to learn how to add Markdown content. For inspiration, refer to the Markdown content which powers the Demo  Install with Git Prerequisites:\n Download and install Git Download and install Hugo   Fork the Academic Kickstart repository and clone your fork with Git:\ngit clone https://github.com/sourcethemes/academic-kickstart.git My_Website  Note that if you forked Academic Kickstart, the above command should be edited to clone your fork, i.e. replace sourcethemes with your GitHub username.\n Initialize the theme:\ncd My_Website git submodule update --init --recursive   Install with ZIP  Download and extract Academic Kickstart Download and extract the Academic theme to the themes/academic/ folder from the above step  Install with RStudio View the guide to installing Academic with RStudio\nQuick start  If you installed on your computer, view your new website by running the following command:\nhugo server  Now visit localhost:1313 and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.\n Read the Quick Start Guide to learn how to add Markdown content, customize your site, and deploy it. For inspiration, refer to the Markdown content which powers the Demo\n Build your site by running the hugo command. Then host it for free using Github Pages or Netlify (refer to the first installation method). Alternatively, copy the generated public/ directory (by FTP, Rsync, etc.) to your production web server (such as a university\u0026rsquo;s hosting service).\n  Updating Feel free to star the project on Github to help keep track of updates and check out the release notes prior to updating your site.\nBefore updating the framework, it is recommended to make a backup of your entire website directory (or at least your themes/academic directory) and record your current version number.\nBy default, Academic is installed as a Git submodule which can be updated by running the following command:\ngit submodule update --remote --merge  Check out the update guide for full instructions and alternative methods.\nFeedback \u0026amp; Contributing Please use the issue tracker to let me know about any bugs or feature requests, or alternatively make a pull request.\nFor support, head over to the Hugo discussion forum.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461124800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1515819600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://sandeepGunda.github.io/post/getting-started/","publishdate":"2016-04-20T00:00:00-04:00","relpermalink":"/post/getting-started/","section":"post","summary":"Create a beautifully simple website or blog in under 10 minutes.","tags":["Academic"],"title":"Academic: the website designer for Hugo","type":"post"},{"authors":null,"categories":null,"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne\r Two\r Three\r\nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c2915ec5da95791851caafdcba9664af","permalink":"https://sandeepGunda.github.io/slides/example-slides/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/example-slides/","section":"slides","summary":"Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$","tags":null,"title":"Slides","type":"slides"}]